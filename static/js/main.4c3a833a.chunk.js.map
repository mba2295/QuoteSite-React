{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","hooks/use-http.js","lib/api.js","pages/AddQuote.js","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/Status.js","pages/AllQuotes.js","pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","styles","header","logo","nav","to","activeClassName","active","Layout","props","main","children","Card","classes","card","LoadingSpinner","spinner","QuoteForm","useState","isEnteringInForm","setIsEnteringInForm","authorInputRef","useRef","textInputRef","when","message","onFocus","e","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","control","htmlFor","type","id","ref","rows","actions","onClick","httpReducer","state","action","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AddQuote","history","useHistory","useEffect","console","log","NoQuotesFound","noquotes","QuoteItem","item","QuoteList","quotes","ascending","location","useLocation","isSortAscending","URLSearchParams","search","get","toLowerCase","sortedQuotes","sort","quoteA","quoteB","sorting","pathname","list","map","quote","Status","AllQuotes","length","NotFound","NewCommentForm","commentTextRef","onCommentAdded","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","params","useParams","isAddingComment","setIsAddingComment","addedCommentHandler","HighlightedQuote","QuoteDetails","routhMatch","useRouteMatch","quoteDetail","path","exact","url","App","ReactDOM","createRoot","document","getElementById","render","basename","process"],"mappings":"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","file":"static/js/main.4c3a833a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { NavLink } from \"react-router-dom\";\nimport styles from \"./MainNavigation.module.css\";\nconst MainNavigation = () => {\n  return (\n    <header className={styles.header}>\n      <div className={styles.logo}>CICD Wise Quotes</div>\n      <nav className={styles.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={styles.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/addquote\" activeClassName={styles.active}>\n              Add New Quotes\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react\";\nimport styles from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation></MainNavigation>\n      <main className={styles.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEnteringInForm, setIsEnteringInForm] = useState();\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // if (enteredAuthor === \"\" && enteredText === \"\") {\n    //   alert(\"Please enter quote and author\");\n    //   return;\n    // }\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const formOnFocusHandler = (e) => {\n    setIsEnteringInForm(true);\n  };\n  const onSubmitBtnClickHandler = (e) => {\n    setIsEnteringInForm(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEnteringInForm}\n        message=\"Are you sure? data entered will be lost\"\n      ></Prompt>\n      <Card>\n        <form\n          onFocus={formOnFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={onSubmitBtnClickHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://react-http-demo-944cb-default-rtdb.asia-southeast1.firebasedatabase.app\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nconst AddQuote = () => {\n  const { status, sendRequest } = useHttp(addQuote, false);\n  const history = useHistory();\n  useEffect(() => {\n    if (status === \"completed\") history.push(\"/quotes\");\n  }, [status, history]);\n  const addQuoteHandler = (quoteData) => {\n    console.log(quoteData);\n    sendRequest(quoteData);\n  };\n  return (\n    <QuoteForm\n      isLoading={status === \"pending\"}\n      onAddQuote={addQuoteHandler}\n    ></QuoteForm>\n  );\n};\n\nexport default AddQuote;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/addquote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        Show Details\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const urlParams = new URLSearchParams(location.search);\n  const isSortAscending = urlParams.get(\"sort\")?.toLowerCase() === \"asc\";\n  const sortingClickHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n  const sortedQuotes = sortQuotes(props.quotes, isSortAscending);\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingClickHandler}>\n          Sort {isSortAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import LoadingSpinner from \"./LoadingSpinner\";\n\nconst Status = (props) => {\n  if (props.status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner></LoadingSpinner>\n      </div>\n    );\n  }\n  if (props.error) {\n    return <p className=\"centered focus\">{props.error}</p>;\n  }\n};\n\nexport default Status;\n","import { useEffect, Fragment } from \"react\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport Status from \"../components/UI/Status\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuotes = () => {\n  const {\n    status,\n    error,\n    data: quotes,\n    sendRequest,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  return (\n    <Fragment>\n      {status === \"completed\" && (!quotes || quotes.length === 0) && (\n        <NoQuotesFound></NoQuotesFound>\n      )}\n      <Status status={status} error={error}></Status>\n      {quotes && quotes.length > 0 && <QuoteList quotes={quotes}></QuoteList>}\n    </Fragment>\n  );\n};\n\nexport default AllQuotes;\n","const NotFound = () => {\n  return <p>No page found!</p>;\n};\n\nexport default NotFound;\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport Status from \"../UI/Status\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { status, error, sendRequest } = useHttp(addComment);\n  const { onCommentAdded } = props;\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onCommentAdded();\n    }\n  }, [error, onCommentAdded, status]);\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    // if (commentTextRef.current.value === \"\") {\n    //   alert(\"please enter some text\");\n    //   return;\n    // }\n    sendRequest({\n      commentData: { text: commentTextRef.current.value },\n      quoteId: props.quoteId,\n    });\n    commentTextRef.current.value = \"\";\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <Status status={status} error={error}></Status>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport Status from \"../UI/Status\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const params = useParams();\n  const {\n    status,\n    error,\n    data: comments,\n    sendRequest,\n  } = useHttp(getAllComments);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { quoteId } = params;\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onCommentAdded={addedCommentHandler}\n        />\n      )}\n      {status === \"completed\" && (!comments || comments.length === 0) && (\n        <p>No comments found</p>\n      )}\n      <Status status={status} error={error}></Status>\n      {comments && comments.length > 0 && (\n        <CommentsList comments={comments}></CommentsList>\n      )}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Route, useRouteMatch } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment, useEffect } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { Link } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport Status from \"../components/UI/Status\";\nconst QuoteDetails = () => {\n  const params = useParams();\n  const routhMatch = useRouteMatch();\n  const { quoteId } = params;\n  const {\n    status,\n    error,\n    data: quoteDetail,\n    sendRequest,\n  } = useHttp(getSingleQuote);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  return (\n    <Fragment>\n      <Status status={status} error={error}></Status>\n      {quoteDetail && (\n        <HighlightedQuote\n          text={quoteDetail.text}\n          author={quoteDetail.author}\n        ></HighlightedQuote>\n      )}\n      <Route path={`/quotes/${params.quoteId}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${routhMatch.url}/comments`}>\n            Show Comments\n          </Link>\n        </div>\n      </Route>\n      {!quoteDetail && <NoQuotesFound></NoQuotesFound>}\n      <Route path={`${routhMatch.path}/comments`}>\n        <Comments></Comments>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n","import { Redirect } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AddQuote from \"./pages/AddQuote\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NotFound from \"./pages/NotFound\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\"></Redirect>\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes></AllQuotes>\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetails></QuoteDetails>\n          </Route>\n          <Route path=\"/addquote\" exact>\n            <AddQuote></AddQuote>\n          </Route>\n          <Route path=\"*\">\n            <NotFound></NotFound>\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}